name: CD

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}       # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: web                         # set this to your Amazon ECR repository name
  ECS_SERVICE: web-service                    # set this to your Amazon ECS service name
  ECS_CLUSTER: web-cluster                    # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: web-td                 # set this to the path to your Amazon ECS task definition # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: web-container               # set this to the name of the container in the

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT




      - name: Render Amazon ECS task definition
        working-directory: task-definition
        run:
          terraform init && terraform apply -auto-approve
          